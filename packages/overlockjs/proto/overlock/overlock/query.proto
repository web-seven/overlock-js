syntax = "proto3";

package overlock.overlock;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "overlock/overlock/params.proto";
import "overlock/overlock/configuration.proto";

option go_package = "overlock/x/overlock/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/overlock/overlock/params";
  
  }
  
  // Queries a list of ShowConfiguration items.
  rpc ShowConfiguration (QueryShowConfigurationRequest) returns (QueryShowConfigurationResponse) {
    option (google.api.http).get = "/overlock/overlock/show_configuration/{id}";
  
  }
  
  // Queries a list of ListConfiguration items.
  rpc ListConfiguration (QueryListConfigurationRequest) returns (QueryListConfigurationResponse) {
    option (google.api.http).get = "/overlock/overlock/list_configuration";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowConfigurationRequest {
  uint64 id = 1;
}

message QueryShowConfigurationResponse {
  Configuration configuration = 1 [(gogoproto.nullable) = false];
}

message QueryListConfigurationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListConfigurationResponse {
  repeated  Configuration configurations = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

